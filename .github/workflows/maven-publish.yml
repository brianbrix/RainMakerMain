# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - main


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      

    - name: Build with Maven
      run: mvn -X -B package --file pom.xml

#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy -X -s $GITHUB_WORKSPACE/settings.xml
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
  publish-job:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp -r target/*.jar target/*.exe staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging

#      - name: Download artifact
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
#          # Required, if artifact is from a different repo
#          # Required, if repo is private a Personal Access Token with `repo` scope is needed
#          github_token: ${{ github.token }}
#          # Required, workflow file name or ID
#          workflow: maven-publish.yml
#          # Optional, the status or conclusion of a completed workflow to search for
#          # Can be one of a workflow conclusion:
#          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
#          # Or a workflow status:
#          #   "completed", "in_progress", "queued"
#          workflow_conclusion: success
#          # Optional, will get head commit SHA
##          pr: ${{github.event.pull_request.number}}
#          # Optional, no need to specify if PR is
##          commit: ${{github.event.pull_request.head.sha}}
#          # Optional, will use the branch
#          branch: main
#          # Optional, defaults to all types
#          event: push
#          # Optional, will use specified workflow run
##          run_id: 1122334455
#          # Optional, run number from the workflow
##          run_number: 34
#          # Optional, uploaded artifact name,
#          # will download all artifacts if not specified
#          # and extract them in respective subdirectories
#          # https://github.com/actions/download-artifact#download-all-artifacts
#          name: Package
#          # Optional, directory where to extract artifact(s), defaults to current directory
##          path: extract_here
#          # Optional, defaults to current repo
##          repo: ${{github.repository}}
#          # Optional, check the workflow run whether it has an artifact
#          # then will get the last available artifact from previous workflow
#          # default false, just try to download from the last one
#          check_artifacts: false
#          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
#          # default false
#          search_artifacts: false
#          # Optional, choose to skip unpacking the downloaded artifact(s)
#          # default false
#          skip_unpack: false
